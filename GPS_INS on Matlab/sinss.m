function [qnb, vn, pos] = sinss(qnb_1, vn_1, pos_1, wm, vm, tss)
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%% =================input==========================%%%
%%% qnb_1为上一时刻的姿态四元数；
%%% vn_1为上一时刻的速度（东、北、天 m/s）；
%%% pos_1为上一时刻的位置（纬度 rad、经度 rad、高度 m）；
%%% wm为ts时间段内的角度增量采样；
%%% vm为ts时间段内的速度增量采样；
%%% ts为采样时间段，一般为整数倍的惯导数据更新周期；
%%% =================output=========================%%%
%%% qnb为当前时刻的姿态四元数；
%%% vn为当前时刻的速度；
%%% pos为当前时刻的位置
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

% tss = ts*size(wm,2);              %此处需注意，函数内外更新周期保持一致
[wnie, wnen, gn, retp] = earth(pos_1, vn_1);
wnin = wnie+wnen;
[phim,dvbm] = cnscl(wm, vm);
%% 速度更新
vngw = tss*(gn-cross((2*wnie+wnen),vn_1));%对应公式后面两项（秦永元P331--9.6.1）
vnfn0 = qmulv(qnb_1, dvbm);%（秦永元P296--9.2.35）
%tss时间段内的速度增量由上一时刻的机体坐标系到上一时刻的导航坐标系（实现方式采用四元数方法）
%dvbm本身就是速度增量，不需要再乘以时间
p = rv2q(-wnin*tss);%旋转矢量转化为变换四元数
vn = vn_1+qmulv(p, vnfn0)+vngw;%（秦永元P331--9.6.1）
%由上一时刻的导航坐标系到当前导航坐标系（采用四元数）（秦永元P293--解析图）%%有待商榷
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%%%在p式中wnin之前为什么是“负号”：
%%%由解析图可知：由R系到b系的等效旋转矢量信息，转过的角度为a，方向也是沿a方向，
%%%由a构成的四元数表示方法见（秦永元P295--9.2.32），由此四元数构成的方向余弦矩阵
%%%是由b系到R系的转换矩阵，刚好和旋转矢量的转换方位相反。故而，不难想象此处取反
%%的意图所在。
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%% 位置更新(秦永元P233-8.1.6)
vn1_1 = (vn+vn_1)./2;
pos = pos_1+tss*[vn1_1(2)/retp.rmh; vn1_1(1)/(retp.rnh*retp.cl); vn1_1(3)];
%% 姿态更新（秦永元P305--9.3.2）
%p = rv2q(-wnin*tss);%在速度更新中已定义
q = rv2q(phim-qmulv(qconj(qnb_1),wnin*tss));%旋转矢量转变为四元数
%在姿态角增量中减去由于导航坐标系的变化而引起的机体系的变化
qnb = qmul(qnb_1, q);
